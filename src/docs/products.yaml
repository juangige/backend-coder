openapi: 3.0.0
info:
  title: Product API
  description: API para gestionar productos en la aplicación.
  version: 1.0.0

servers:
  - url: http://localhost:3000/api/products
    description: Servidor local

paths:
  /:
    get:
      tags:
        - Productos
      summary: Obtener todos los productos
      description: Retorna una lista paginada de todos los productos disponibles.
      parameters:
        - name: page
          in: query
          description: Número de la página (paginación)
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: Número de productos por página
          required: false
          schema:
            type: integer
      responses:
        200:
          description: Lista de productos obtenida exitosamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
        500:
          description: Error interno del servidor.

    post:
      tags:
        - Productos
      summary: Crear un nuevo producto
      description: Crea un producto nuevo en la base de datos.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDto'
      responses:
        201:
          description: Producto creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        400:
          description: Datos inválidos en la solicitud.
        500:
          description: Error interno del servidor.

  /{productId}:
    get:
      tags:
        - Productos
      summary: Obtener un producto por ID
      description: Retorna un producto específico basado en su ID.
      parameters:
        - name: productId
          in: path
          required: true
          description: ID del producto
          schema:
            type: string
      responses:
        200:
          description: Producto obtenido exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        404:
          description: Producto no encontrado.
        500:
          description: Error interno del servidor.

    put:
      tags:
        - Productos
      summary: Actualizar un producto por ID
      description: Actualiza los datos de un producto existente.
      parameters:
        - name: productId
          in: path
          required: true
          description: ID del producto
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDto'
      responses:
        200:
          description: Producto actualizado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        400:
          description: Datos inválidos en la solicitud.
        404:
          description: Producto no encontrado.
        500:
          description: Error interno del servidor.

    delete:
      tags:
        - Productos
      summary: Eliminar un producto por ID
      description: Elimina un producto de la base de datos basado en su ID.
      parameters:
        - name: productId
          in: path
          required: true
          description: ID del producto
          schema:
            type: string
      responses:
        200:
          description: Producto eliminado exitosamente.
        404:
          description: Producto no encontrado.
        500:
          description: Error interno del servidor.

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          description: ID único del producto.
        name:
          type: string
          description: Nombre del producto.
        description:
          type: string
          description: Descripción del producto.
        price:
          type: number
          description: Precio del producto.
        image:
          type: string
          description: URL de la imagen del producto.
        stock:
          type: integer
          description: Cantidad de productos disponibles.
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación del producto.
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización del producto.

    ProductDto:
      type: object
      properties:
        name:
          type: string
          description: Nombre del producto.
        description:
          type: string
          description: Descripción del producto.
        price:
          type: number
          description: Precio del producto.
        image:
          type: string
          description: URL de la imagen del producto.
        stock:
          type: integer
          description: Cantidad de productos disponibles.
      required:
        - name
        - description
        - price
        - image
        - stock

